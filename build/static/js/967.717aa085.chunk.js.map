{"version":3,"file":"static/js/967.717aa085.chunk.js","mappings":"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","sources":["components/CommonInput/PasswordInput.tsx","components/CommonInput/TextInput.tsx","components/Message/index.tsx","view/Register/Inner.jsx","view/Register/index.jsx"],"sourcesContent":["import { Input } from 'antd';\r\nimport { FC, useCallback, memo } from 'react';\r\nimport { IInputProps } from './type';\r\n\r\nconst PasswordInput: FC<IInputProps> = memo(\r\n    ({ value, onChange, options, ...props }) => {\r\n        const handleChange = useCallback(\r\n            (e: any) => {\r\n                onChange && onChange(e.target.value);\r\n            },\r\n            [onChange]\r\n        );\r\n\r\n        return (\r\n            <Input.Password\r\n                {...props}\r\n                placeholder=\"Mật khẩu\"\r\n                value={value}\r\n                addonAfter={null}\r\n                addonBefore={null}\r\n                onChange={handleChange}\r\n                required={true}\r\n            />\r\n        );\r\n    }\r\n);\r\n\r\nexport default PasswordInput;\r\n","import { Input } from 'antd';\r\nimport { FC, useCallback, memo } from 'react';\r\nimport { IInputProps } from './type';\r\n\r\nconst TextInput: FC<IInputProps> = memo(\r\n    ({ value, onChange, options, addonBefore, addonAfter, ...props }) => {\r\n        const handleChange = useCallback(\r\n            (e: any) => {\r\n                onChange && onChange(e.target.value);\r\n            },\r\n            [onChange]\r\n        );\r\n\r\n        return (\r\n            <Input\r\n                {...props}\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={handleChange}\r\n            />\r\n        );\r\n    }\r\n);\r\n\r\nexport default TextInput;\r\n","import { notification } from 'antd';\r\nconst defaultInfoMessageDuration = 7;\r\nconst defaultSuccessMessageDuration = 3;\r\nconst defaultWarningMessageDuration = 10;\r\nconst defaultErrorMessageDuration = 0; // don't auto-hide error messages\r\n\r\nclass Message {\r\n    public static sendSuccess = (\r\n        message: string | undefined,\r\n        duration: number = defaultSuccessMessageDuration\r\n    ) => {\r\n        notification['success']({\r\n            message: \"Thành công\",\r\n            description: message,\r\n            duration: duration,\r\n        });\r\n    };\r\n\r\n    public static sendInfo = (\r\n        message: string | undefined,\r\n        duration: number = defaultInfoMessageDuration\r\n    ) => {\r\n        notification['info']({\r\n            message: \"Thông báo\",\r\n            description: message,\r\n            duration: duration,\r\n        });\r\n    };\r\n\r\n    public static sendWarning = (\r\n        message: string | undefined,\r\n        duration: number = defaultWarningMessageDuration\r\n    ) => {\r\n        notification['warning']({\r\n            message: \"Cảnh báo\",\r\n            description: message,\r\n            duration: duration,\r\n        });\r\n    };\r\n\r\n    public static sendError = (\r\n        message: string | undefined,\r\n        duration: number = defaultErrorMessageDuration\r\n    ) => {\r\n        notification['error']({\r\n            message: \"Lỗi\",\r\n            description: message,\r\n            duration: duration,\r\n        });\r\n    };\r\n}\r\n\r\nexport default Message;\r\n","import { memo, useState, useCallback, useEffect } from \"react\";\r\nimport Message from \"components/Message\";\r\nimport { Button } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport TextInput from \"components/CommonInput/TextInput\";\r\nimport PasswordInput from \"components/CommonInput/PasswordInput\";\r\n\r\nconst Inner = memo(({ handleRegister }) => {\r\n  const [usernameEmpty, setUsernameEmpty] = useState();\r\n  const [emailEmpty, setEmailEmpty] = useState();\r\n  const [passwordEmpty, setPasswordEmpty] = useState();\r\n  const [firstNameEmpty, setFirstNameEmpty] = useState();\r\n  const [lastNameEmpty, setLastNameEmpty] = useState();\r\n\r\n  const [username, setUsername] = useState();\r\n  const [firstname, setFirstName] = useState();\r\n  const [lastname, setLastName] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [passwordCheck, setPasswordCheck] = useState();\r\n\r\n  const navigate = useNavigate();\r\n  const handleBlurUsername = useCallback((e) => {\r\n    if (e.target.value) {\r\n      setUsernameEmpty(false);\r\n    } else {\r\n      setUsernameEmpty(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleBlurFirstName = useCallback((e) => {\r\n    if (e.target.value) {\r\n      setFirstNameEmpty(false);\r\n    } else {\r\n      setFirstNameEmpty(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleBlurLastName = useCallback((e) => {\r\n    if (e.target.value) {\r\n      setLastNameEmpty(false);\r\n    } else {\r\n      setLastNameEmpty(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleBlurEmail = useCallback((e) => {\r\n    if (e.target.value) {\r\n      setEmailEmpty(false);\r\n    } else {\r\n      setEmailEmpty(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleBlurPassword = useCallback((e) => {\r\n    if (e.target.value) {\r\n      setPasswordEmpty(false);\r\n    } else {\r\n      setPasswordEmpty(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = useCallback(() => {\r\n    if (password !== passwordCheck) {\r\n      Message.sendError(\"Hai lần nhập mật khẩu không khớp\");\r\n      return;\r\n    }\r\n    handleRegister({\r\n      uid: username,\r\n      username: username,\r\n      password: password,\r\n      confirm_password: password,\r\n      email: email,\r\n      first_name: firstname,\r\n      last_name: lastname,\r\n    }).then((data) => {\r\n      if (data.isSuccess) {\r\n        Message.sendSuccess(\"Đăng ký thành công\");\r\n        navigate(\"/\", { replace: true });\r\n      } else {\r\n        Message.sendError(`${data.message}`);\r\n      }\r\n    });\r\n  }, [\r\n    handleRegister,\r\n    navigate,\r\n    password,\r\n    passwordCheck,\r\n    username,\r\n    email,\r\n    lastname,\r\n    firstname,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    var user = document.getElementById(\"username\");\r\n    user.addEventListener(\"keypress\", function (event) {\r\n      if (event.key === \"Enter\") {\r\n        event.preventDefault();\r\n        document.getElementById(\"login\").click();\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    var pass = document.getElementById(\"password\");\r\n    pass.addEventListener(\"keypress\", function (event) {\r\n      if (event.key === \"Enter\") {\r\n        event.preventDefault();\r\n        document.getElementById(\"login\").click();\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-input-background\">\r\n        <div className=\"login-input-container\">\r\n          <div className=\"logo-container\">\r\n            <img\r\n              src={\"webicon_remove_background.png\"}\r\n              alt=\"Web Logo\"\r\n              height={150}\r\n            />\r\n          </div>\r\n          <div className=\"register-title\">Đăng ký</div>\r\n          <div className=\"login-semi-title\">Tên tài khoản</div>\r\n          <TextInput\r\n            className=\"register-text-input\"\r\n            placeholder=\"Tên đăng nhập\"\r\n            onBlur={handleBlurUsername}\r\n            onChange={(e) => setUsername(e)}\r\n            name=\"username\"\r\n            required\r\n            id=\"username\"\r\n          />\r\n          {usernameEmpty && (\r\n            <div className=\"invalid-feedback\">\r\n              <span>Vui lòng nhập username</span>\r\n            </div>\r\n          )}\r\n          <div className=\"login-semi-title\">Họ và tên</div>\r\n          <div className=\"ho-ten-div\">\r\n            <div className=\"ho-div\">\r\n              <TextInput\r\n                className=\"register-text-input\"\r\n                placeholder=\"Họ\"\r\n                onBlur={handleBlurFirstName}\r\n                onChange={(e) => setFirstName(e)}\r\n                name=\"first_name\"\r\n                required\r\n                id=\"first_name\"\r\n              />\r\n              {firstNameEmpty && (\r\n                <div className=\"invalid-feedback\">\r\n                  <span>Vui lòng nhập họ</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"ten-div\">\r\n              <TextInput\r\n                className=\"register-text-input\"\r\n                placeholder=\"Tên\"\r\n                onBlur={handleBlurLastName}\r\n                onChange={(e) => setLastName(e)}\r\n                name=\"last_name\"\r\n                required\r\n                id=\"last_name\"\r\n              />\r\n              {lastNameEmpty && (\r\n                <div className=\"invalid-feedback\">\r\n                  <span>Vui lòng nhập tên</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"login-semi-title\">Mật khẩu</div>\r\n          <PasswordInput\r\n            className=\"password-input\"\r\n            onBlur={handleBlurPassword}\r\n            onChange={(e) => setPassword(e)}\r\n            name=\"password\"\r\n            id=\"password\"\r\n          />\r\n          {passwordEmpty && (\r\n            <div className=\"invalid-feedback\">\r\n              <span>Vui lòng nhập password</span>\r\n            </div>\r\n          )}\r\n          <div className=\"login-semi-title\">Nhập lại Mật khẩu</div>\r\n          <PasswordInput\r\n            className=\"password-input\"\r\n            onBlur={handleBlurPassword}\r\n            onChange={(e) => setPasswordCheck(e)}\r\n          />\r\n          {passwordEmpty && (\r\n            <div className=\"invalid-feedback\">\r\n              <span>Vui lòng nhập password</span>\r\n            </div>\r\n          )}\r\n          <div className=\"login-semi-title\">Địa chỉ Email</div>\r\n          <TextInput\r\n            className=\"register-text-input\"\r\n            placeholder=\"Email\"\r\n            onBlur={handleBlurEmail}\r\n            onChange={(e) => setEmail(e)}\r\n            name=\"email\"\r\n            required\r\n            id=\"email\"\r\n          />\r\n          {emailEmpty && (\r\n            <div className=\"invalid-feedback\">\r\n              <span>Vui lòng nhập email</span>\r\n            </div>\r\n          )}\r\n          <Button\r\n            type=\"primary\"\r\n            className=\"login-button\"\r\n            onClick={handleSubmit}\r\n            id=\"login\"\r\n          >\r\n            Đăng ký\r\n          </Button>\r\n          <Button className=\"return-button\" onClick={() => navigate(-1)}>\r\n            Quay lại\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"login-picture-container\">\r\n        <img src={\"login-removebg.png\"} alt=\"Web Logo\" height={790} />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Inner;\r\n","import { memo } from 'react';\r\nimport { useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport routeConstants from 'route/routeConstant';\r\nimport UserService from 'services/userService';\r\nimport Inner from 'view/Register/Inner';\r\n\r\nconst Wrapper = memo((props) => {\r\n    const navigate = useNavigate();\r\n    const handleRegister = useCallback(\r\n        async data => {\r\n            const register = await UserService.create(data);\r\n            if (register.isSuccess) {\r\n                navigate(routeConstants.MAIN);\r\n            }\r\n            return register;\r\n        },\r\n        [navigate]\r\n    );\r\n\r\n    return <Inner {...props} handleRegister={handleRegister}/>;\r\n});\r\nWrapper.displayName = 'Register';\r\n\r\nconst Register = Wrapper;\r\n\r\nexport default Register;\r\n"],"names":["PasswordInput","memo","_ref","value","onChange","props","options","_objectWithoutProperties","_excluded","handleChange","useCallback","e","target","_jsx","Input","Password","_objectSpread","placeholder","addonAfter","addonBefore","required","TextInput","type","Message","_createClass","_classCallCheck","sendSuccess","message","duration","arguments","length","undefined","notification","description","sendInfo","sendWarning","sendError","handleRegister","_useState","useState","_useState2","_slicedToArray","usernameEmpty","setUsernameEmpty","_useState3","_useState4","emailEmpty","setEmailEmpty","_useState5","_useState6","passwordEmpty","setPasswordEmpty","_useState7","_useState8","firstNameEmpty","setFirstNameEmpty","_useState9","_useState10","lastNameEmpty","setLastNameEmpty","_useState11","_useState12","username","setUsername","_useState13","_useState14","firstname","setFirstName","_useState15","_useState16","lastname","setLastName","_useState17","_useState18","email","setEmail","_useState19","_useState20","password","setPassword","_useState21","_useState22","passwordCheck","setPasswordCheck","navigate","useNavigate","handleBlurUsername","handleBlurFirstName","handleBlurLastName","handleBlurEmail","handleBlurPassword","handleSubmit","uid","confirm_password","first_name","last_name","then","data","isSuccess","replace","concat","useEffect","document","getElementById","addEventListener","event","key","preventDefault","click","_jsxs","className","children","src","alt","height","onBlur","name","id","Button","onClick","Wrapper","_asyncToGenerator","_regeneratorRuntime","mark","_callee","register","wrap","_context","prev","next","UserService","create","sent","routeConstants","MAIN","abrupt","stop","_x","apply","Inner","displayName"],"sourceRoot":""}