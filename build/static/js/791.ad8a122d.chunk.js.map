{"version":3,"file":"static/js/791.ad8a122d.chunk.js","mappings":"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","sources":["components/CommonInput/Checkbox.tsx","components/CommonInput/PasswordInput.tsx","components/CommonInput/TextInput.tsx","components/Message/index.tsx","view/Login/Inner.jsx","view/Login/index.jsx"],"sourcesContent":["import { Checkbox as AntdCheckbox } from 'antd';\r\nimport { FC, useCallback, memo, useEffect, useState } from 'react';\r\nimport { DATA_SEPARATOR } from 'utils/constants';\r\nimport { IInputProps } from './type';\r\n\r\nconst Checkbox: FC<IInputProps> = memo(\r\n    ({ value, onChange, options, ...props }) => {\r\n        const [currentValue, setCurrentValue] = useState([]);\r\n\r\n        useEffect(() => {\r\n            let newValue: any = [];\r\n            if (value) {\r\n                newValue = `${value}`.split(DATA_SEPARATOR);\r\n            }\r\n            setCurrentValue(newValue);\r\n        }, [value]);\r\n\r\n        const handleChange = useCallback(\r\n            (e: any) => {\r\n                let targetValue = e.target.value;\r\n                let selectedValues: any = [...currentValue];\r\n                if (e.target.checked) {\r\n                    if (!selectedValues.some((v: any) => v === targetValue)) {\r\n                        selectedValues = [...selectedValues, targetValue];\r\n                    }\r\n                } else {\r\n                    selectedValues = selectedValues.filter(\r\n                        (v: any) => v !== targetValue\r\n                    );\r\n                }\r\n                setCurrentValue(selectedValues);\r\n                if (onChange) {\r\n                    const valueString = selectedValues.join(DATA_SEPARATOR);\r\n                    onChange(valueString);\r\n                }\r\n            },\r\n            [onChange, currentValue]\r\n        );\r\n\r\n        return (\r\n            <>\r\n                {options?.map((option: any, idx) => {\r\n                    const isChecked = currentValue.some(\r\n                        v => `${v}`.trim() === option.value\r\n                    );\r\n                    return (\r\n                        <div key={idx}>\r\n                            <AntdCheckbox\r\n                                {...props}\r\n                                value={option.value}\r\n                                checked={isChecked}\r\n                                onChange={handleChange}\r\n                            >\r\n                                {option.label && (\r\n                                    <span className=\"checkbox-label\">\r\n                                        {option.label}\r\n                                    </span>\r\n                                )}\r\n                            </AntdCheckbox>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </>\r\n        );\r\n    }\r\n);\r\n\r\nexport default Checkbox;\r\n","import { Input } from 'antd';\r\nimport { FC, useCallback, memo } from 'react';\r\nimport { IInputProps } from './type';\r\n\r\nconst PasswordInput: FC<IInputProps> = memo(\r\n    ({ value, onChange, options, ...props }) => {\r\n        const handleChange = useCallback(\r\n            (e: any) => {\r\n                onChange && onChange(e.target.value);\r\n            },\r\n            [onChange]\r\n        );\r\n\r\n        return (\r\n            <Input.Password\r\n                {...props}\r\n                placeholder=\"Mật khẩu\"\r\n                value={value}\r\n                addonAfter={null}\r\n                addonBefore={null}\r\n                onChange={handleChange}\r\n                required={true}\r\n            />\r\n        );\r\n    }\r\n);\r\n\r\nexport default PasswordInput;\r\n","import { Input } from 'antd';\r\nimport { FC, useCallback, memo } from 'react';\r\nimport { IInputProps } from './type';\r\n\r\nconst TextInput: FC<IInputProps> = memo(\r\n    ({ value, onChange, options, addonBefore, addonAfter, ...props }) => {\r\n        const handleChange = useCallback(\r\n            (e: any) => {\r\n                onChange && onChange(e.target.value);\r\n            },\r\n            [onChange]\r\n        );\r\n\r\n        return (\r\n            <Input\r\n                {...props}\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={handleChange}\r\n            />\r\n        );\r\n    }\r\n);\r\n\r\nexport default TextInput;\r\n","import { notification } from 'antd';\r\nconst defaultInfoMessageDuration = 7;\r\nconst defaultSuccessMessageDuration = 3;\r\nconst defaultWarningMessageDuration = 10;\r\nconst defaultErrorMessageDuration = 0; // don't auto-hide error messages\r\n\r\nclass Message {\r\n    public static sendSuccess = (\r\n        message: string | undefined,\r\n        duration: number = defaultSuccessMessageDuration\r\n    ) => {\r\n        notification['success']({\r\n            message: \"Thành công\",\r\n            description: message,\r\n            duration: duration,\r\n        });\r\n    };\r\n\r\n    public static sendInfo = (\r\n        message: string | undefined,\r\n        duration: number = defaultInfoMessageDuration\r\n    ) => {\r\n        notification['info']({\r\n            message: \"Thông báo\",\r\n            description: message,\r\n            duration: duration,\r\n        });\r\n    };\r\n\r\n    public static sendWarning = (\r\n        message: string | undefined,\r\n        duration: number = defaultWarningMessageDuration\r\n    ) => {\r\n        notification['warning']({\r\n            message: \"Cảnh báo\",\r\n            description: message,\r\n            duration: duration,\r\n        });\r\n    };\r\n\r\n    public static sendError = (\r\n        message: string | undefined,\r\n        duration: number = defaultErrorMessageDuration\r\n    ) => {\r\n        notification['error']({\r\n            message: \"Lỗi\",\r\n            description: message,\r\n            duration: duration,\r\n        });\r\n    };\r\n}\r\n\r\nexport default Message;\r\n","import { memo, useState, useCallback, useMemo, useEffect } from \"react\";\r\nimport Message from \"components/Message\";\r\nimport { Button } from \"antd\";\r\nimport { useNavigate, NavLink } from \"react-router-dom\";\r\nimport TextInput from \"components/CommonInput/TextInput\";\r\nimport PasswordInput from \"components/CommonInput/PasswordInput\";\r\nimport Checkbox from \"components/CommonInput/Checkbox\";\r\nimport routeConstants from \"route/routeConstant\";\r\n\r\nconst errorMessages = {\r\n  WITHOUT_NUMBER_ERROR: \"Field password must contain number\",\r\n  WITHOUT_CHARACTER_ERROR: \"Field password entirely numeric\",\r\n  WRONG_INPUT_ERROR: \"Tên đăng nhập hoặc mật khẩu sai!\",\r\n  USERNAME_REQUIRED_ERROR: \"Field username is required\",\r\n  PASSWORD_REQUIRED_ERROR: \"Field password is required\",\r\n};\r\n\r\nconst Inner = memo(({ handleLogin }) => {\r\n  const [usernameEmpty, setUsernameEmpty] = useState();\r\n  const [passwordEmpty, setPasswordEmpty] = useState();\r\n\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n\r\n  const navigate = useNavigate();\r\n  const handleBlurUsername = useCallback((e) => {\r\n    if (e.target.value) {\r\n      setUsernameEmpty(false);\r\n    } else {\r\n      setUsernameEmpty(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleBlurPassword = useCallback((e) => {\r\n    if (e.target.value) {\r\n      setPasswordEmpty(false);\r\n    } else {\r\n      setPasswordEmpty(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = useCallback(() => {\r\n    handleLogin({\r\n      username: username,\r\n      password: password,\r\n    }).then((data) => {\r\n      if (data.isSuccess) {\r\n        Message.sendSuccess(\"Đăng nhập thành công\");\r\n      } else {\r\n        if (\r\n          data.message === errorMessages.WITHOUT_CHARACTER_ERROR ||\r\n          data.message === errorMessages.WITHOUT_NUMBER_ERROR\r\n        ) {\r\n          Message.sendError(\"Mật khẩu phải chứa số và kí tự!\");\r\n        } else if (data.message === errorMessages.WRONG_INPUT_ERROR) {\r\n          Message.sendError(\"Tên đăng nhập hoặc mật khẩu không chính xác!\");\r\n        } else if (data.message === errorMessages.PASSWORD_REQUIRED_ERROR) {\r\n          Message.sendError(\"Vui lòng điền mật khẩu!\");\r\n        } else if (data.message === errorMessages.USERNAME_REQUIRED_ERROR) {\r\n          Message.sendError(\"Vui lòng điền tên đăng nhập!\");\r\n        } else {\r\n          Message.sendError(`Người dùng ${username} không tồn tại!`);\r\n        }\r\n      }\r\n    });\r\n  }, [handleLogin, password, username]);\r\n\r\n  const options = useMemo(\r\n    () => [\r\n      {\r\n        label: \"Ghi nhớ\",\r\n        value: \"Nhớ mật khẩu\",\r\n        children: [],\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    var user = document.getElementById(\"username\");\r\n    user.addEventListener(\"keypress\", function (event) {\r\n      if (event.key === \"Enter\") {\r\n        event.preventDefault();\r\n        document.getElementById(\"login\").click();\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    var pass = document.getElementById(\"password\");\r\n    pass.addEventListener(\"keypress\", function (event) {\r\n      if (event.key === \"Enter\") {\r\n        event.preventDefault();\r\n        document.getElementById(\"login\").click();\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-input-background\">\r\n        <div className=\"login-input-container\">\r\n          <div className=\"logo-container\">\r\n            <img\r\n              src={\"webicon_remove_background.png\"}\r\n              alt=\"Web Logo\"\r\n              height={150}\r\n            ></img>\r\n          </div>\r\n          <div className=\"login-title\">Đăng nhập</div>\r\n          <div className=\"login-semi-title\">Tên tài khoản</div>\r\n          <TextInput\r\n            className=\"username-input\"\r\n            placeholder=\"Tên đăng nhập\"\r\n            onBlur={handleBlurUsername}\r\n            onChange={(e) => setUsername(e)}\r\n            name=\"username\"\r\n            required\r\n            id=\"username\"\r\n          />\r\n          {usernameEmpty && (\r\n            <div className=\"invalid-feedback\">\r\n              <span>Please enter username</span>\r\n            </div>\r\n          )}\r\n          <div className=\"login-semi-title\">Mật khẩu</div>\r\n          <PasswordInput\r\n            className=\"password-input\"\r\n            onBlur={handleBlurPassword}\r\n            onChange={(e) => setPassword(e)}\r\n            name=\"password\"\r\n            id=\"password\"\r\n          />\r\n          {passwordEmpty && (\r\n            <div className=\"invalid-feedback\">\r\n              <span>Please enter password</span>\r\n            </div>\r\n          )}\r\n          <div className=\"checkbox-container\">\r\n            <Checkbox options={options} style={{ display: \"none\" }} />\r\n            <NavLink\r\n              to={routeConstants.FORGOT_PASSWORD}\r\n              className=\"forgot-password-link\"\r\n              onClick={()=>{Message.sendInfo(`Work In Progress`)}}\r\n            >\r\n              Quên mật khẩu\r\n            </NavLink>\r\n          </div>\r\n          <Button\r\n            type=\"primary\"\r\n            className=\"login-button\"\r\n            onClick={handleSubmit}\r\n            id=\"login\"\r\n          >\r\n            Đăng nhập\r\n          </Button>\r\n          <div className=\"login-register\">\r\n            Bạn chưa có tài khoản?\r\n            <NavLink to={routeConstants.REGISTER} className=\"register-link\">\r\n              Đăng ký\r\n            </NavLink>\r\n          </div>\r\n          <Button className=\"return-button\" onClick={() => navigate(\"/home\")}>\r\n            Trở về trang chủ\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"login-picture-container\">\r\n        <img src={\"login-removebg.png\"} alt=\"Web Logo\" height={790} />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Inner;\r\n","import { memo, useCallback, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getToken, setToken } from 'reducers/token/function';\r\nimport routeConstants from 'route/routeConstant';\r\nimport UserService from 'services/userService';\r\nimport Inner from 'view/Login/Inner';\r\n\r\nconst Wrapper = memo(props => {\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        const token = getToken();\r\n        if (token) {\r\n            navigate(routeConstants.KHOSANPHAM, { replace: true });\r\n        }\r\n    }, [navigate]);\r\n    const handleLogin = useCallback(\r\n        async data => {\r\n            const login = await UserService.login(data);\r\n            if (login.isSuccess) {\r\n                setToken(login.data.token.accessToken);\r\n                navigate(routeConstants.KHOSANPHAM);\r\n            }\r\n            return login;\r\n        },\r\n        [navigate]\r\n    );\r\n\r\n    return <Inner {...props} handleLogin={handleLogin} />;\r\n});\r\nWrapper.displayName = 'Login';\r\n\r\nconst Login = Wrapper;\r\n\r\nexport default Login;\r\n"],"names":["Checkbox","memo","_ref","value","onChange","options","props","_objectWithoutProperties","_excluded","_useState","useState","_useState2","_slicedToArray","currentValue","setCurrentValue","useEffect","newValue","concat","split","DATA_SEPARATOR","handleChange","useCallback","e","targetValue","target","selectedValues","_toConsumableArray","checked","some","v","filter","valueString","join","_jsx","_Fragment","children","map","option","idx","isChecked","trim","AntdCheckbox","_objectSpread","label","className","PasswordInput","Input","Password","placeholder","addonAfter","addonBefore","required","TextInput","type","Message","_createClass","_classCallCheck","sendSuccess","message","duration","arguments","length","undefined","notification","description","sendInfo","sendWarning","sendError","errorMessages","handleLogin","usernameEmpty","setUsernameEmpty","_useState3","_useState4","passwordEmpty","setPasswordEmpty","_useState5","_useState6","username","setUsername","_useState7","_useState8","password","setPassword","navigate","useNavigate","handleBlurUsername","handleBlurPassword","handleSubmit","then","data","isSuccess","useMemo","document","getElementById","addEventListener","event","key","preventDefault","click","_jsxs","src","alt","height","onBlur","name","id","style","display","NavLink","to","routeConstants","FORGOT_PASSWORD","onClick","Button","REGISTER","Wrapper","getToken","KHOSANPHAM","replace","_asyncToGenerator","_regeneratorRuntime","mark","_callee","login","wrap","_context","prev","next","UserService","sent","setToken","token","accessToken","abrupt","stop","_x","apply","Inner","displayName"],"sourceRoot":""}